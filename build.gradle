plugins {
    id "com.jfrog.bintray" version "1.1"
    id "com.github.jruby-gradle.base" version "0.1.5"
    id "java"
}
import com.github.jrubygradle.JRubyExec
repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}
configurations {
    provided
}

version = "0.1.0-SNAPSHOT"

dependencies {
    compile  "org.embulk:embulk-core:0.3.2"
    provided "org.embulk:embulk-core:0.3.2"
    compile 'org.elasticsearch:elasticsearch:1.4.2'
    testCompile "junit:junit:4.+"
    testCompile "org.mockito:mockito-core:1.+"
}

task classpath(type: Copy) {
    doFirst { file("classpath").deleteDir() }
    from (configurations.runtime - configurations.provided + files(jar.archivePath))
    into "classpath"
}

//task copyDependencies(type:Copy) {
//    new File("$buildDir/libs/dependencies").mkdirs()
//    into "$buildDir/libs/dependencies" from configurations.runtime
//}

task gem(type: JRubyExec, dependsOn: ["build", "gemspec", "classpath"]) {
    jrubyArgs "-rrubygems/gem_runner", "-eGem::GemRunner.new.run(ARGV)", "build"
    script "build/gemspec"
    doLast { ant.move(file: "${project.name}-${project.version}.gem", todir: "pkg") }
}

task gemspec << { file("build/gemspec").write($/
Gem::Specification.new do |gem|
  gem.summary       = "Elasticsearch output plugin for Embulk, a plugin-based parallel bulk data loader"

  gem.name          = "${project.name}"
  gem.version       = "${project.version}"
  gem.description   = gem.summary
  gem.authors       = ["Muga Nishizawa"]
  gem.email         = ["muga.nishizawa@gmail.com"]
  gem.license       = "Apache 2.0"
  gem.homepage      = "https://github.com/muga/embulk-output-elasticsearch"

  gem.files         = `git ls-files`.split("\n") + Dir["classpath/*.jar"]
  gem.test_files    = gem.files.grep(%r{^(test|spec|features)/})
  gem.executables   = gem.files.grep(%r{^bin/}).map{ |f| File.basename(f) }
  gem.require_paths = ["lib"]
  gem.has_rdoc      = false

  gem.add_development_dependency "bundler", [">= 1.0"]
  gem.add_development_dependency "rake", [">= 0.10.0"]
  gem.add_development_dependency "test-unit", ["~> 3.0.2"]
end
/$)
}